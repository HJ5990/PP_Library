-- 테이블 삭제
DROP TABLE RENTALLOG;
DROP TABLE BOOK;
DROP TABLE MEMBER;
DROP TABLE ADMIN;
DROP TABLE CATEGORY;


-- 테이블 생성
CREATE TABLE CATEGORY(
    C_NO NUMBER PRIMARY KEY,
    C_NAME VARCHAR2(20) UNIQUE NOT NULL
);

CREATE TABLE BOOK(
    B_NO NUMBER PRIMARY KEY,
    C_NO NUMBER REFERENCES CATEGORY NOT NULL,
    B_NAME VARCHAR2(50) NOT NULL,
    AUTHOR VARCHAR2(50) NOT NULL,
    PUBLISHDATE DATE NOT NULL,
    QUANTITY NUMBER NOT NULL
);

CREATE TABLE MEMBER(
    M_NO NUMBER PRIMARY KEY,
    M_ID VARCHAR2(20) UNIQUE NOT NULL,
    M_PWD VARCHAR2(20) NOT NULL,
    M_NAME VARCHAR2(20) NOT NULL,
    M_PHONE VARCHAR2(20),
    M_STATUS VARCHAR2(12) DEFAULT 'TRUE' NOT NULL
);

CREATE TABLE ADMIN(
    A_NO NUMBER PRIMARY KEY,
    A_ID VARCHAR2(20) UNIQUE NOT NULL,
    A_PWD VARCHAR2(20) NOT NULL,
    A_NAME VARCHAR2(20) NOT NULL
);


CREATE TABLE RENTALLOG(
    R_NO NUMBER PRIMARY KEY,
    REN_DATE DATE NOT NULL,
    M_NO NUMBER REFERENCES MEMBER NOT NULL,
    B_NO NUMBER REFERENCES BOOK NOT NULL,
    RR_CHECK VARCHAR2(6) NOT NULL,
    RET_DATE DATE DEFAULT ''
);



-- 시퀀스 삭제
DROP SEQUENCE SEQ_BOOK;
DROP SEQUENCE SEQ_MEM;
DROP SEQUENCE SEQ_RENT;
DROP SEQUENCE SEQ_ADMIN;

-- 시퀀스 생성
CREATE SEQUENCE SEQ_BOOK
START WITH 101
NOCACHE;

CREATE SEQUENCE SEQ_MEM
START WITH 201
NOCACHE;

CREATE SEQUENCE SEQ_RENT
START WITH 1
NOCACHE;

CREATE SEQUENCE SEQ_ADMIN
START WITH 501
NOCACHE;



-- 대여 트리거
CREATE OR REPLACE TRIGGER TRG_QU
AFTER INSERT ON RENTALLOG
FOR EACH ROW
BEGIN
    IF(:NEW.RR_CHECK = '대여')
        THEN UPDATE BOOK
              SET QUANTITY = QUANTITY - 1
              WHERE B_NO = :NEW.B_NO;
        END IF;
END;
/

-- 반납 트리거
CREATE OR REPLACE TRIGGER TRG_QU_R
AFTER UPDATE ON RENTALLOG
FOR EACH ROW
WHEN (NEW.RR_CHECK = '반납')
BEGIN
    UPDATE BOOK
    SET QUANTITY = QUANTITY + 1
    WHERE B_NO = :NEW.B_NO;
END;
/




-- 카테고리 데이터
INSERT INTO CATEGORY VALUES (1, '문학');
INSERT INTO CATEGORY VALUES (2, '경제');
INSERT INTO CATEGORY VALUES (3, '교육');
INSERT INTO CATEGORY VALUES (4, '취미');
INSERT INTO CATEGORY VALUES (5, '만화');
INSERT INTO CATEGORY VALUES (6, '기타');

-- 책 데이터
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '불편한 편의점', '김호연', '2021-04-20', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '오만과 편견', '제인 오스틴', '2009-01-20', 5);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '달러구트 꿈 백화점', '이미예', '2020-07-08', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '나에게 고맙다', '전승환', '2022-02-18', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '설득', '제인 오스틴', '2017-04-21', 5);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '사피엔스', '유발 하라리', '2023-01-27', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '하얼빈', '김훈', '2022-08-03', 1);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '해리포터', 'J.K.롤링', '2019-11-19', 5);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '인간 실격', '다자이 오사무', '2012-04-10', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 1, '꽃을 보듯 너를 본다', '나태주', '2020-11-30', 1);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 2, '부자 아빠 가난한 아빠', '로버트 기요사키', '2022-10-28', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 2, '트렌드 코리아 2023', '김난도', '2022-10-05', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 2, '돈의 속성', '김승호', '2020-06-15', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 2, '부의 추월차선', '엠제이 드마코', '2022-02-04', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 2, '돈의 심리학', '모건 하우절', '2021-01-13', 1);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 3, '비전공자를 위한 IT 지식', '최원영', '2020-07-14', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 3, '바로 쓰는 영어', '셀리', '2022-07-20', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 3, '10배의 법칙', '그랜트 카돈', '2022-03-30', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 3, '비즈니스 영어', '오카다 효고', '2021-12-20', 4);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 4, '어른을 위한 두뇌 놀이책', '개러스 무어', '2021-08-20', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 4, '말랑말랑 스퀴시', '조윤성', '2022-07-05', 4);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 4, '방구석 미술관', '조원재', '2021-12-21', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 4, '모두의 타로', '멕 헤이어츠', '2022-01-21', 1);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 4, '김락희의 인체 드로잉', '김락희', '2019-11-26', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 5, '원피스 101', '오다 에이치로', '2022-03-24', 5);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 5, '귀멸의 칼날 외전', '고토게 코요하루', '2021-12-25', 5);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 5, '명탐정 코난 100', '아오야마 고쇼', '2022-01-20', 4);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 5, '스파이 패밀리 1', '엔도 타츠야', '2019-11-28', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 5, '주술회전 18', '아쿠타미 게게', '2022-02-28', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 6, '백년허리', '정선근', '2021-05-13', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 6, '튼이 이유식', '정주희', '2019-01-03', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 6, '어떻게 말해줘야 할까', '오은영', '2020-10-25', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 6, '법륜 스님의 반야심경 강의', '법륜', '2022-06-30', 2);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 6, '리얼 국내여행', '배나영', '2022-05-03', 3);
INSERT INTO BOOK VALUES (SEQ_BOOK.NEXTVAL, 6, '코스모스', '칼 세이건', '2010-01-20', 1);



-- 회원 데이터
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'choi123', 'choi123', '최하나', '010-1234-1234', 'TRUE');
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'lee_2', 'lee_2', '이두이', '010-2222-2222', 'TRUE');
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'park33', 'park33', '박삼삼', '010-3333-3333', 'TRUE');
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'kim4', 'kim4', '김사사', '010-4444-4444', 'TRUE');
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'shin_55', 'shin_55', '신다섯', '010-5555-5555', 'TRUE');
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'soh06', 'soh06', '소육이', '010-6666-6666', 'TRUE');
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'oh777', 'oh777', '오칠칠', '010-7777-7777', 'TRUE');
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'shi8', 'shi8', '시여덟', '010-8888-8888', 'TRUE');
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'googoo', 'googoo', '구구콘', '010-9999-9999', 'TRUE');

-- 관리자 데이터
INSERT INTO ADMIN VALUES (SEQ_ADMIN.NEXTVAL, 'admin01', 'admin01', '관리자1');


-- 대여기록 데이터
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-08-01', 201, 105, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-08-03', 202, 120, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-08-15', 204, 111, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-08-27', 205, 103, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-03', 206, 120, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-04', 207, 113, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-06', 208, 124, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-07', 209, 118, '대여', NULL);

UPDATE RENTALLOG SET RR_CHECK = '반납', RET_DATE = '2023-08-10' WHERE R_NO = 1;
UPDATE RENTALLOG SET RR_CHECK = '반납', RET_DATE = '2023-08-15' WHERE R_NO = 3;
UPDATE RENTALLOG SET RR_CHECK = '반납', RET_DATE = '2023-09-10' WHERE R_NO = 5;
UPDATE RENTALLOG SET RR_CHECK = '반납', RET_DATE = '2023-09-12' WHERE R_NO = 6;
UPDATE RENTALLOG SET RR_CHECK = '반납', RET_DATE = '2023-09-13' WHERE R_NO = 7;

INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-09', 204, 126, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-13', 206, 125, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-20', 203, 121, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-20', 203, 134, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-21', 203, 117, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-21', 201, 114, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-23', 205, 108, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-23', 205, 109, '대여', NULL);
INSERT INTO RENTALLOG VALUES (SEQ_RENT.NEXTVAL, '2023-09-25', 208, 103, '대여', NULL);





COMMIT;




-------------------------------------------------------------------------------------------------
--
--
---- 책조회
--SELECT B_NO, C_NAME, B_NAME, AUTHOR, PUBLISHDATE, QUANTITY
--FROM BOOK
--JOIN CATEGORY USING(C_NO)
--WHERE C_NO = 1 AND QUANTITY >= 1;
--
--
--
---- 대여한 책 조회
--SELECT R_NO, RR_DATE, B_NAME
--FROM RENTALLOG
--JOIN BOOK USING (B_NO)
--WHERE M_NO = 204 AND RR_CHECK = '대여';
--
---- 반납처리
--UPDATE RENTALLOG
--SET RR_CHECK = '반납', RET_DATE = SYSDATE
--WHERE R_NO = 10;
--
---- 베스트샐러 조회
---- 1) RENTALLOG에서 책별 카운트 하기
--SELECT B_NO, COUNT(*)
--FROM RENTALLOG
--GROUP BY B_NO
--ORDER BY 2 DESC;
--
---- 2) 5개만 추리기
--SELECT B_NO
--FROM (SELECT B_NO, COUNT(*)
--        FROM RENTALLOG
--        GROUP BY B_NO
--        ORDER BY 2 DESC)
--WHERE ROWNUM <=5;
--
---- 3) 추려진 5개의 B_NO 이용해서 BOOK 의 책정보 출력
--SELECT B_NO, C_NAME, B_NAME, AUTHOR, PUBLISHDATE
--FROM BOOK
--JOIN CATEGORY USING(C_NO)
--WHERE B_NO IN (SELECT B_NO
--                FROM (SELECT B_NO, COUNT(*)
--                        FROM RENTALLOG
--                        GROUP BY B_NO
--                        ORDER BY 2 DESC)
--                WHERE ROWNUM <=5)
--ORDER BY (
--    SELECT COUNT(*)
--    FROM RENTALLOG
--    WHERE B_NO = BOOK.B_NO
--) DESC;
--
--
---- 신간 5개 조회
--SELECT *
--FROM (SELECT B_NO, C_NAME, B_NAME, AUTHOR, PUBLISHDATE
--        FROM BOOK
--        JOIN CATEGORY USING(C_NO)
--        ORDER BY 5 DESC)
--WHERE ROWNUM <= 5;
--
--SELECT B_NO, C_NAME, B_NAME, AUTHOR, PUBLISHDATE
--FROM BOOK
--JOIN CATEGORY USING(C_NO)
--WHERE AUTHOR LIKE '%제%';
--
--
--SELECT M_NO, B_NO
--FROM RENTALLOG
--WHERE B_NO =? AND RR_CHECK = '대여';
--
--
---- 아이디와 비번가지고 렌탈로그에 반납안한 책이 있는지 확인하기
---- 1) 해당 정보의 회원번호 얻기
--SELECT M_NO
--FROM MEMBER
--WHERE M_ID = 'kim4' AND M_PWD = 'kim4';
--
---- 2) 회원번호로 대여중인 책이 있는지 확인
--SELECT M_NO, B_NO
--FROM RENTALLOG
--WHERE M_NO = (SELECT M_NO
--                FROM MEMBER
--                WHERE M_ID = 'kim4' AND M_PWD = 'kim4')
--     AND RR_CHECK = '대여';
--
--
---- 장기미반납자
--SELECT R_NO, REN_DATE, B_NAME, M_NAME, M_PHONE
--FROM RENTALLOG
--JOIN BOOK USING (B_NO)
--JOIN MEMBER USING (M_NO)
--WHERE RR_CHECK = '대여'
--ORDER BY REN_DATE;
--
--SELECT *
--FROM (SELECT R_NO, REN_DATE, B_NAME, M_NAME, M_PHONE
--    FROM RENTALLOG
--    JOIN BOOK USING (B_NO)
--    JOIN MEMBER USING (M_NO)
--    WHERE RR_CHECK = '대여'
--    ORDER BY REN_DATE)
--WHERE ROWNUM <= 5;
--
--
---- 장기미반납자 (1개월)
--SELECT R_NO, REN_DATE, B_NAME, M_NAME, M_PHONE
--FROM RENTALLOG
--JOIN BOOK USING (B_NO)
--JOIN MEMBER USING (M_NO)
--WHERE RR_CHECK = '대여'
--    AND MONTHS_BETWEEN(SYSDATE, REN_DATE) >= 1
--ORDER BY REN_DATE;

--UPDATE MEMBER
--	SET M_STATUS = 'TRUE'
--	WHERE M_ID = 'ex1' AND M_PWD = 'ex1';

